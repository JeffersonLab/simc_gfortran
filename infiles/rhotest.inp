; This is a CTP file

begin parm experiment
  ngen = 10000			;  POS: # of successes; NEG: # of tries
  EXPER.charge = 1.0		;  total charge (mC)
  doing_phsp = 0		;  (ONE = TRUE)
  doing_kaon = 0		;  (ONE = TRUE)
  doing_pion = 0		;  (ONE = TRUE)
  which_pion = 0
  doing_rho = 1                 ;  exclusive rho production
  doing_semi = 0
  doing_hplus = 0		;  positive hadrons? (only for semi or rho)
  doing_decay = 1		;  1=decay ON, 0=decay OFF.
  ctau = 780.4			;  decay length (cm)
end parm experiment

begin parm kinematics_main
  Ebeam = 5492.04		;  (MeV)
  dEbeam = 0.05			;  beam energy variation (%)
  electron_arm = 2              ;  1=hms,2=sos,3=hrsr,4=hrsl
  hadron_arm = 1                ;  1=hms,2=sos,3=hrsr,4=hrsl
  spec.e.P = 1634.0		;  e arm central momentum (MeV/c)
  spec.e.theta = 28.71		;  e arm angle setting (degrees)
  spec.p.P = 3222.0		;  p arm central momentum (MeV/c)
  spec.p.theta = 11.55		;  p arm angle setting (degrees)
end parm kinematics_main

begin parm target
  targ.A = 1.			;  target A
  targ.Z = 1.			;  target Z
  targ.mass_amu = 1.007276	;  target mass in amu
  targ.mrec_amu = 0.0           ;  recoil mass in amu (eep=A-1 system,pion=A-2)
  targ.rho = 0.0723		;  target density (g/cm^3)
  targ.thick = 288.8		;  target thick (mg/cm^2)
  targ.angle = 0.		;  target angle (for solid target) (degrees)
  targ.abundancy = 100.0	;  target purity (%)
  targ.can = 2			;  1=beer can (fpi), 2=pudding can (nucpi)
end parm target

begin parm debug		;  (ONES give helpful debug info)
  debug(1) = 0			;  turns on output from brem.f
  debug(2) = 0			;  into/outa subs.
  debug(3) = 0			;  spit out values (init. and main loop).
  debug(4) = 0			;  mostly comp_ev, gen_rad diagnostics.
  debug(5) = 0			;  a bit of everything.
end parm debug

begin parm e_arm_accept
  SPedge.e.delta.min = -15.0	;  delta min (SPECTROMETER ACCEPTANCE!)
  SPedge.e.delta.max =  15.0	;  delta max
  SPedge.e.yptar.min = -80.0	; .yptar.min = {TF} / 1000 (mrad)
  SPedge.e.yptar.max =  80.0	; .yptar.max = {TF} / 1000
  SPedge.e.xptar.min = -60.0	; .xptar.min = {TF} / 1000 (mrad)
  SPedge.e.xptar.max =  60.0	; .xptar.max = {TF} / 1000
end parm e_arm_accept

begin parm p_arm_accept
  SPedge.p.delta.min = -10.5	;  delta min (SPECTROMETER ACCEPTANCE!)
  SPedge.p.delta.max =  10.5	;  delta max
  SPedge.p.yptar.min = -200.0	; .yptar.min = {TF} / 1000 (mrad)
  SPedge.p.yptar.max =  200.0	; .yptar.max = {TF} / 1000
  SPedge.p.xptar.min = -500.0	; .xptar.min = {TF} / 1000 (mrad)
  SPedge.p.xptar.max =  500.0	; .xptar.max = {TF} / 1000
end parm p_arm_accept

begin parm beamandtargetinfo
  gen.xwid = 0.008868		;  beam width - one sigma (cm)  (89microns)
  gen.ywid = 0.004235		;  beam width - one sigma (cm)  (42microns)
  targ.fr_pattern = 1.		;  raster pattern: 1=square, 2=circular
  targ.fr1 = 0.1		;  horizontal size OR inner radius(2)
  targ.fr2 = 0.1		;  vertical size OR outer radius(2)
  targ.xoffset = 0.0		;  target x-offset (cm): +x = beam right
  targ.yoffset = 0.0		;  target y-offset (cm): +y = up
  targ.zoffset = 0.278		;  target z-offset (cm): +z = downstream
end parm beamandtergetinfo

;These are offsets applied before the call to the single arm montecarlos.
begin parm spect_offset
  spec.e.offset.x = 0.		;  x offset (cm)
  spec.e.offset.y = 0.		;  y offset (cm)
  spec.e.offset.z = 0.		;  z offset (cm)
  spec.e.offset.xptar = 0.	;  xptar offset (mr)	!x(y)ptar is slope, so
  spec.e.offset.yptar = 0.	;  yptar offset (mr)	!it's really unitless.
  spec.p.offset.x = 0.		;  x offset (cm)
  spec.p.offset.y = 0.		;  y offset (cm)
  spec.p.offset.z = 0.		;  z offset (cm)
  spec.p.offset.xptar = 0.	;  xptar offset (mr)
  spec.p.offset.yptar = 0.	;  yptar offset (mr)
end parm spect_offset

begin parm simulate
  hard_cuts = 0         ;  (ONE = TRUE) SPedge and Em.max are hard cuts(ntuple)
  using_rad = 0		;  (ONE = TRUE)
  use_expon = 0		;  (LEAVE AT 0)
  one_tail = -3		;  0=all, 1=e, 2=e', 3=p, -3=all but p
  intcor_mode = 1	;  (LEAVE AT 1)
  spect_mode = 0	;  0=e+p arms, -1=p arm, -2=e arm only, 1=none
  cuts.Em.min = 0.	;  (Em.min=Em.max=0.0 gives wide open cuts)
  cuts.Em.max = 0.	;  Must be wider than cuts in analysis(elast. or e,e'p)
  using_Eloss = 1	;  (ONE = TRUE)
  correct_Eloss = 1	;  ONE = correct reconstructed events for eloss.
  correct_raster = 1	;  ONE=Reconstruct events using raster matrix elements
  mc_smear = 1.		;  ONE = target & hut mult scatt AND DC smearing.
  deForest_flag = 0	;  0=sigcc1, 1=sigcc2, -1=sigcc1 ONSHELL
  rad_flag = 0		;  (radiative option #1...see init.f)
  extrad_flag = 2	;  (rad. option #2...see init.f)
  lambda(1) = 0.0	;  if rad_flag.eq.4 then lambda(1) = {TF}
  lambda(2) = 0.0	;  if rad_flag.eq.4 then lambda(2) = {TF}
  lambda(3) = 0.0	;  if rad_flag.eq.4 then lambda(3) = {TF}
  Nntu = 1		;  ONE = generate ntuples
  using_Coulomb = 1	;  (ONE = TRUE)
  dE_edge_test = 0.	;  (move around energy edges)
  use_offshell_rad = 1	;  (ONE = TRUE)
  Egamma_gen_max = 0. ;  Set >0 to hardwire the Egamma limits.
;  pt_b_param = 4.661    ;  Semi-inc. b-param (pi+) from Brecht Hommez's Thesis
  pt_b_param = 4.694    ;  Semi-inc. b-param (pi-) from Brecht Hommez's Thesis
;  pt_b_param = 5.    
;  pt_b_param = 4.    
  sigc_flag = 0         ; 0 = bin in z, 1 = bin in pt2
  sigc_nbin = 10        ; number of bins for "central" cross section calc
  sigc_kin_min = 0.73   ; minumum z (or pt2) for central cross section calc 
  sigc_kin_max = 0.97   ; maximum z (or pt2) for central cross section calc
  sigc_kin_ind = 0.005  ; value for 'independent' variable (pt2 in GeV2 
                        ; if binning in z)
;  sigc_flag = 1         ; 0 = bin in z, 1 = bin in pt2
;  sigc_nbin = 10        ; number of bins for "central" cross section calc
;  sigc_kin_min = 0.0   ; minumum z (or pt2) for central cross section calc 
;  sigc_kin_max = 0.02   ; maximum z (or pt2) for central cross section calc
;  sigc_kin_ind = 0.37  ; value for 'independent' variable (pt2 in GeV2) 

end parm simulate
